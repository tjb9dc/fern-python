{
    "types": {
        "type_commons/types:Tag": "\"tag-wf9as23d\"\n",
        "type_types:MovieId": "\"movie-c06a4ad7\"\n",
        "type_types:Movie": "from seed import Movie\n\nMovie(\n    id=\"movie-c06a4ad7\",\n    title=\"The Boy and the Heron\",\n    from_=\"Hayao Miyazaki\",\n    rating=8.0,\n    type=\"movie\",\n    tag=\"tag-wf9as23d\",\n)\n",
        "type_types:ExtendedMovie": "from seed import ExtendedMovie\n\nExtendedMovie(\n    id=\"movie-sda231x\",\n    title=\"Pulp Fiction\",\n    from_=\"Quentin Tarantino\",\n    rating=8.5,\n    type=\"movie\",\n    tag=\"tag-12efs9dv\",\n    cast=[\"John Travolta\", \"Samuel L. Jackson\", \"Uma Thurman\", \"Bruce Willis\"],\n)\n",
        "type_types:Moment": "import datetime\nimport uuid\n\nfrom seed import Moment\n\nMoment(\n    id=uuid.UUID(\n        \"656f12d6-f592-444c-a1d3-a3cfd46d5b39\",\n    ),\n    date=datetime.date.fromisoformat(\n        \"1994-01-01\",\n    ),\n    datetime=datetime.datetime.fromisoformat(\n        \"1994-01-01 01:01:01+00:00\",\n    ),\n)\n",
        "type_types:File": "from seed import File\n\nFile(\n    name=\"file.txt\",\n    contents=\"...\",\n)\n",
        "type_types:Directory": "from seed import Directory, File\n\nDirectory(\n    name=\"root\",\n    files=[\n        File(\n            name=\"file.txt\",\n            contents=\"...\",\n        )\n    ],\n    directories=[\n        Directory(\n            name=\"tmp\",\n            files=[\n                File(\n                    name=\"another_file.txt\",\n                    contents=\"...\",\n                )\n            ],\n        )\n    ],\n)\n",
        "type_types:Node": "from seed import Node, Tree\n\nNode(\n    name=\"root\",\n    nodes=[\n        Node(\n            name=\"left\",\n        ),\n        Node(\n            name=\"right\",\n        ),\n    ],\n    trees=[\n        Tree(\n            nodes=[\n                Node(\n                    name=\"left\",\n                ),\n                Node(\n                    name=\"right\",\n                ),\n            ],\n        )\n    ],\n)\n",
        "type_types:Tree": "from seed import Node, Tree\n\nTree(\n    nodes=[\n        Node(\n            name=\"left\",\n        ),\n        Node(\n            name=\"right\",\n        ),\n    ],\n)\n",
        "type_types:Metadata": "from seed import Metadata_Html\n\nMetadata_Html(value=\"<head>...</head>\")\n",
        "type_types:Exception": "from seed import Exception_Generic, ExceptionInfo\n\nException_Generic(\n    value=ExceptionInfo(\n        exception_type=\"Unavailable\",\n        exception_message=\"This component is unavailable!\",\n        exception_stacktrace=\"<logs>\",\n    )\n)\n",
        "type_types:ExceptionInfo": "from seed import ExceptionInfo\n\nExceptionInfo(\n    exception_type=\"Unavailable\",\n    exception_message=\"This component is unavailable!\",\n    exception_stacktrace=\"<logs>\",\n)\n",
        "type_types:MigrationStatus": "from seed import MigrationStatus\n\nMigrationStatus.RUNNING\n",
        "type_types:Migration": "from seed import Migration, MigrationStatus\n\nMigration(\n    name=\"001_init\",\n    status=MigrationStatus.RUNNING,\n)\n",
        "type_types:Request": "from seed import Request\n\nRequest(\n    request={},\n)\n",
        "type_types:Response": "from seed import Response\n\nResponse(\n    response=\"Initializing...\",\n)\n",
        "type_types:Test": "from seed import Test_And\n\nTest_And(value=True)\n"
    },
    "endpoints": [
        {
            "id": {
                "path": "/",
                "method": "POST"
            },
            "snippet": {
                "sync_client": "from seed.client import SeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = SeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nclient.echo(\n    request=\"Hello world!\",\n)\n",
                "async_client": "from seed.client import AsyncSeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = AsyncSeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nawait client.echo(\n    request=\"Hello world!\",\n)\n",
                "type": "python"
            }
        },
        {
            "id": {
                "path": "/file/notification/{notificationId}",
                "method": "GET"
            },
            "snippet": {
                "sync_client": "from seed.client import SeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = SeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nclient.file.notification.get_exception(\n    notification_id=\"notification-hsy129x\",\n)\n",
                "async_client": "from seed.client import AsyncSeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = AsyncSeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nawait client.file.notification.get_exception(\n    notification_id=\"notification-hsy129x\",\n)\n",
                "type": "python"
            }
        },
        {
            "id": {
                "path": "/file/{filename}",
                "method": "GET"
            },
            "snippet": {
                "sync_client": "from seed.client import SeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = SeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nclient.file.get_file(\n    filename=\"file.txt\",\n    x_file_api_version=\"0.0.2\",\n)\n",
                "async_client": "from seed.client import AsyncSeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = AsyncSeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nawait client.file.get_file(\n    filename=\"file.txt\",\n    x_file_api_version=\"0.0.2\",\n)\n",
                "type": "python"
            }
        },
        {
            "id": {
                "path": "/check/{id}",
                "method": "GET"
            },
            "snippet": {
                "sync_client": "from seed.client import SeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = SeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nclient.health.check(\n    id=\"id-2sdx82h\",\n)\n",
                "async_client": "from seed.client import AsyncSeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = AsyncSeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nawait client.health.check(\n    id=\"id-2sdx82h\",\n)\n",
                "type": "python"
            }
        },
        {
            "id": {
                "path": "/ping",
                "method": "GET"
            },
            "snippet": {
                "sync_client": "from seed.client import SeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = SeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nclient.health.ping()\n",
                "async_client": "from seed.client import AsyncSeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = AsyncSeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nawait client.health.ping()\n",
                "type": "python"
            }
        },
        {
            "id": {
                "path": "/movie/{movieId}",
                "method": "GET"
            },
            "snippet": {
                "sync_client": "from seed.client import SeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = SeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nclient.get_movie(\n    movie_id=\"movie-c06a4ad7\",\n)\n",
                "async_client": "from seed.client import AsyncSeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = AsyncSeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nawait client.get_movie(\n    movie_id=\"movie-c06a4ad7\",\n)\n",
                "type": "python"
            }
        },
        {
            "id": {
                "path": "/movie",
                "method": "POST"
            },
            "snippet": {
                "sync_client": "from seed import Movie\nfrom seed.client import SeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = SeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nclient.create_movie(\n    request=Movie(\n        id=\"movie-c06a4ad7\",\n        title=\"The Boy and the Heron\",\n        from_=\"Hayao Miyazaki\",\n        rating=8.0,\n        type=\"movie\",\n        tag=\"tag-wf9as23d\",\n    ),\n)\n",
                "async_client": "from seed import Movie\nfrom seed.client import AsyncSeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = AsyncSeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nawait client.create_movie(\n    request=Movie(\n        id=\"movie-c06a4ad7\",\n        title=\"The Boy and the Heron\",\n        from_=\"Hayao Miyazaki\",\n        rating=8.0,\n        type=\"movie\",\n        tag=\"tag-wf9as23d\",\n    ),\n)\n",
                "type": "python"
            }
        },
        {
            "id": {
                "path": "/metadata",
                "method": "GET"
            },
            "snippet": {
                "sync_client": "from seed.client import SeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = SeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nclient.get_metadata(\n    x_api_version=\"0.0.1\",\n    shallow=False,\n    tag=\"development\",\n)\n",
                "async_client": "from seed.client import AsyncSeedExamples\nfrom seed.environment import SeedExamplesEnvironment\n\nclient = AsyncSeedExamples(\n    token=\"YOUR_TOKEN\",\n    environment=SeedExamplesEnvironment.PRODUCTION,\n)\nawait client.get_metadata(\n    x_api_version=\"0.0.1\",\n    shallow=False,\n    tag=\"development\",\n)\n",
                "type": "python"
            }
        }
    ]
}